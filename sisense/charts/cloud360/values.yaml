# Default values

replicaCount: 0

image:
  pullPolicy: IfNotPresent

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
port: 3600
targetPort: 3600

securityContext:
  runAsUser: 1000
  runAsGroup: 1000
  seLinuxOptions:
    level: "s0:c123,c456"
# If the volume has a lot of files then setting volume ownership could be slow, see https://github.com/kubernetes/kubernetes/issues/69699
  # fsGroup: 1000

resources:
  requests:
    cpu: 100m
    memory: 500Mi
  limits:
    cpu: 10000m
    memory: 1Gi

## Pod topology spread constraints
## https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
## The value is evaluated as a template
topologySpreadConstraints: []

nodeSelector: {}

tolerations: []

podAnnotations: {}

# Referring to existing secrets and configMaps
secrets: []
configMaps: []

affinity: {}

## StrategyType
## Can be set to RollingUpdate or Recreate
updateStrategy: {}

allowCloud360: false

# Default values for secretKeyRef
secrets:
  snowflakeUsernameSecretKey: "username"
  snowflakeUsernameSecretName: "cloud360-snowflake-username"
  snowflakePasswordSecretKey: "password"
  snowflakePasswordSecretName: "cloud360-snowflake-password"
  snowflakeWarehouseSecretKey: "warehouse"
  snowflakeWarehouseSecretName: "cloud360-snowflake-warehouse"
  snowflakeDatabaseSecretKey: "database"
  snowflakeDatabaseSecretName: "cloud360-snowflake-database"
  snowflakeSchemaSecretKey: "schema"
  snowflakeSchemaSecretName: "cloud360-snowflake-schema"
  snowflakeHostSecretKey: "host"
  snowflakeHostSecretName: "cloud360-snowflake-host"
