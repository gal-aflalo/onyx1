{{- if and (.Values.global.notifyOnUpgrade | default false) (gt ( .Release.Revision ) 1) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway-maintenance
  labels:
    app: api-gateway
    release: {{ .Release.Name }}
    chart: {{ template "sisense-utils.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    sisense-version: {{ include "sisense-utils.sisense.version" . }}
    maintenance: "true"
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  selector:
    matchLabels:
      app: api-gateway
      maintenance: "true"
  template:
    metadata:
      labels:
        app: api-gateway
        release: {{ .Release.Name }}
        chart: {{ template "sisense-utils.chart" . }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        sisense-version: {{ include "sisense-utils.sisense.version" . }}
        maintenance: "true"
      {{- if .Values.global.exposeNodePorts.enabled | default false }}
        network_policy: bypass
      {{- end }}
    spec:
      {{- if .Values.global.clusterMode.enabled | default false }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "node-{{ .Release.Namespace }}-Application"
                operator: In
                values:
                - "true"
      {{- end }}
      serviceAccountName: api-gateway-maintenance
      {{- if .Values.global.securityContext }}
      securityContext:
        runAsGroup: {{ .Values.global.securityContext.runAsGroup | default 1000 }}
        runAsUser: {{ .Values.global.securityContext.runAsUser | default 1000 }}
      {{- else if .Values.securityContext }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- end }}
      containers:
      - name: maintenance-service
        image: "{{ .Values.global.imageRegistry }}/maintenance:maintenance-service-develop"
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 50m
            memory: 70Mi
          requests:
            cpu: 1m
            memory: 13Mi
        ports:
        - containerPort: 8456
      - name: maintenance-listener
        image: "{{ .Values.global.imageRegistry }}/utilsbox:stable"
        command: ['sh', '-c', 'while true; do nc -l -p 1602; done']
        ports:
        - containerPort: 1602
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.global.imagePullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-maintenance
  labels:
    maintenance: "true"
    release: {{ .Release.Name }}
    chart: {{ template "sisense-utils.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  type: ClusterIP
  ports:
  - name: maintenance-listener
    port: 1602
    protocol: TCP
    targetPort: 1602
  selector:
    maintenance: "true"
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: api-gateway-maintenance
  labels:
    app.kubernetes.io/name: api-gateway-maintenance
    release: {{ .Release.Name }}
    chart: {{ template "sisense-utils.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}
